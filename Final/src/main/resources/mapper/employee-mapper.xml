<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="employee">
	<!-- User insert 예시 -->
	<insert id="insertEmployee" parameterType="u">
 		insert into employee values
 		(EMPLOYEE_SEQUENCE.nextval,#{id},#{pw},#{name},#{email},#{phone},#{address},#{birth},#{gender},0,#{detailAddress})

 	</insert>
 	<delete id="employeeDelete" parameterType="string">
 		delete from employee where employee_id=#{id}
 	</delete>
 	<!-- User select 예시 -->
	<select id="selectOneEmployee" parameterType="u" resultType="u">
	  select 
	  	employee_no as no,
	  	employee_id as id,
	  	employee_pw as pw, 
	  	employee_name as name,
	  	employee_email as email,
	  	employee_phone as phone,
	  	employee_address as address,
	  	employee_birth as birth,
	  	employee_gender as gender,
		change_pw as changePw,
		detail_address as detailAddress,
		'e' AS type
	  from employee where employee_id=#{id}
	  <if test="pw != null">
	 	and employee_pw=#{pw}
 	  </if>
	</select>
	<update id="employeeUpdate" parameterType="u">
 	update employee set 
 		employee_pw=#{pw}, 
 		employee_email=#{email},
 		employee_phone=#{phone},
 		employee_address=#{address},
 		employee_birth=#{birth},
 		employee_gender=#{gender},
 		detail_address = #{detailAddress}
 	where employee_id = #{id}
 	</update>
 	<update id="uploadPhoto" parameterType="n">
 	update notice_employee set 
 		notice_employee_filename = #{filename},
  		notice_employee_filepath = #{filename}
 	where notice_employee_no = #{noticeEmployeeNo}
 	</update>
 	<update id="kakaoUpdate" parameterType="u">
	update member set 
 		member_pw=#{pw},
 		member_phone=#{phone},
 		member_address=#{address},
 		detail_address = #{detailAddress}
 	<!-- 	profileImage = #{profileImage} -->
 	where member_id = #{email}
	</update>
	<select id="kakaoSelect" parameterType="u" resultType="u">
	select
			member_no as no,
			member_id as id,
			member_pw as pw,
			member_name as name,
			member_phone as phone,
			member_address as address,
			member_birth as birth,
			member_gender as gender,
			change_pw as changePw,
			loginpath as path,
			detail_address as detailAddress,
			profileImage,
			'm' as type
		from member where member_id=#{email}
		<if test="pw != null">
			and member_pw = #{pw}
		</if>
	</select>
	<select id="totalPartnerList" resultType="u">
	select 
	  	partner_no as no,
	  	partner_yn as yn,
	  	partner_id as id,
	  	partner_pw as pw, 
	  	partner_name as name,
	  	partner_email as email,
	  	partner_phone as phone,
	  	partner_address as address,
		change_pw as changePw,
		detail_address as detailAddress,
		'p' AS type
	from partner
	</select> 
	<select id="totalUserList" resultType="u">
	select 
	  	member_no as no,
	  	member_id as id,
	  	member_pw as pw, 
	  	member_name as name,
	  	member_phone as phone,
	  	member_address as address,
	  	member_birth as birth,
	  	member_gender as gender,
		change_pw as changePw,
		detail_address as detailAddress,
		'u' AS type
	from member
	</select> 
	<insert id="insertNoticeEmployee" parameterType="n">
 		insert into NOTICE_EMPLOYEE values(
 		NOTICE_EMPLOYEE_SEQUENCE.nextval,
 		#{title},
 		#{writer},
 		#{content},
 		#{noticeEmployeeDate},
 		#{filename},
 		#{filename},
 		0
 		)

 	</insert>
 	
  <select id="noticeEmployeeList" resultType="n">
  	select
  		notice_employee_no as noticeEmployeeNo,
  		notice_employee_title as title,
  		notice_employee_writer as writer,
  		notice_employee_content as content,
  		notice_employee_filename as filename,
  		notice_employee_filepath as filepath,
  		notice_employee_date as noticeEmployeeDate,
  		notice_employee_views as noticeEmployeeViews
  	 from NOTICE_EMPLOYEE ORDER BY notice_employee_no DESC
  </select>
  <select id="detailNoticeEmployee" parameterType="int" resultType="n">
  	select 
  		notice_employee_no as noticeEmployeeNo,
  		notice_employee_title as title,
  		notice_employee_writer as writer,
  		notice_employee_content as content,
  		notice_employee_filename as filename,
  		notice_employee_filepath as filepath,
  		notice_employee_date as noticeEmployeeDate,
  		notice_employee_views as noticeEmployeeViews
  	 from notice_employee where notice_employee_no=#{noticeEmployeeNo}
  </select>
 	<delete id="deleteNotice" parameterType="n">
 		delete from notice_employee where notice_employee_no=#{noticeEmployeeNo}
 	</delete>
 	<update id="updateYn" parameterType="u">
 	update partner set 
 		partner_yn=#{yn}
 	where partner_no=#{no}
 	</update>
 	<update id="updateNotice" parameterType="n">
 		update notice_employee set
 			notice_employee_title=#{title},
 			notice_employee_content=#{content}
 		where notice_employee_no=#{noticeEmployeeNo}
 	</update>
 	<update id="updateReadCount" parameterType="n">
	update notice_employee set 
 		notice_employee_views=#{noticeEmployeeViews}+1
 	where notice_employee_no=#{noticeEmployeeNo}
	</update>
	<select id="idSearch" parameterType="u" resultType="String">
	select employee_id as id from employee 
	where employee_name = #{name} and employee_phone = #{phone}
	</select>
	<select id="pwSearch" parameterType="u" resultType="String">
	select employee_pw as pw from employee 
	where employee_id = #{id} and employee_phone = #{phone}
	</select>
</mapper>